{"ast":null,"code":"import _classCallCheck from \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/src/Page.js\";\nimport React, { Component } from \"react\";\nimport Lists from \"./Lists\";\nimport Header from \"./Header\"; //모든 state를 page가 가지고 있어서 header와 lists에 뿌려줘야함.\n// list와 header는 state를 가지고 있을 필요 x\n//page의 state가 바뀌면(부모의 state가 바뀌면) 헤더와 리스트도 바뀌겟지.\n//헤더와 리스트의 관점에서는 props가 바뀌면 렌더링되는식.\n//list는 따로 꺼낼필요x 그냥 function으로 lists에 넣어버리자.\n\nvar Page =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Page, _Component);\n\n  function Page() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Page);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Page)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      information: []\n    };\n\n    _this.handleCreate = function (data) {\n      console.log(data);\n\n      _this.setState({\n        information: _this.state.information.concat(data)\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Page, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(Lists, {\n        onCreate: this.handleCreate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }), JSON.stringify(this.state.information));\n    }\n  }]);\n\n  return Page;\n}(Component);\n\nexport default Page;","map":{"version":3,"sources":["/Users/junwoopark/coding/vanillacoding/vanilla-world-news/src/Page.js"],"names":["React","Component","Lists","Header","Page","state","information","handleCreate","data","console","log","setState","concat","JSON","stringify"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;AACA;AACA;AACA;AACA;;IAEMC,I;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,WAAW,EAAG;AADV,K;;UAIRC,Y,GAAe,UAACC,IAAD,EAAU;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,YAAKG,QAAL,CAAc;AACVL,QAAAA,WAAW,EAAE,MAAKD,KAAL,CAAWC,WAAX,CAAuBM,MAAvB,CAA8BJ,IAA9B;AADH,OAAd;AAGH,K;;;;;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,KAAD;AAAO,QAAA,QAAQ,EAAI,KAAKD,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGKM,IAAI,CAACC,SAAL,CAAe,KAAKT,KAAL,CAAWC,WAA1B,CAHL,CADJ;AAOH;;;;EApBcL,S;;AAuBnB,eAAeG,IAAf","sourcesContent":["import React, {Component} from \"react\";\nimport Lists from \"./Lists\";\nimport Header from \"./Header\"\n\n//모든 state를 page가 가지고 있어서 header와 lists에 뿌려줘야함.\n// list와 header는 state를 가지고 있을 필요 x\n//page의 state가 바뀌면(부모의 state가 바뀌면) 헤더와 리스트도 바뀌겟지.\n//헤더와 리스트의 관점에서는 props가 바뀌면 렌더링되는식.\n//list는 따로 꺼낼필요x 그냥 function으로 lists에 넣어버리자.\n\nclass Page extends Component {\n    state = {\n        information : [],\n    }\n\n    handleCreate = (data) => {\n        console.log(data);\n        this.setState({\n            information: this.state.information.concat(data)\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                {/* <Header /> */}\n                <Lists onCreate = {this.handleCreate} />\n                {JSON.stringify(this.state.information)}\n            </div>\n        );\n    }\n}\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}