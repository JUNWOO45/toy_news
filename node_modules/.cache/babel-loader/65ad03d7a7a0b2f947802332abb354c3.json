{"ast":null,"code":"import _defineProperty from \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/src/Header.js\";\nimport React, { Component } from \"react\";\nimport \"./Header.css\";\nimport Lists from \"./Lists\";\n\nvar Header =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Header, _Component);\n\n  //밑의 input태그의 this.handleChange를 this.props.handleChange같은 구조로.\n  //따로 state없이도 부모(page)에서 가져온 props만으로도 조작가능하니깐.\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Header).call(this, props));\n    _this.makeList =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var newsLists;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.callNewsApi();\n\n            case 2:\n              newsLists = _context.sent;\n\n              _this.props.onTest(newsLists); //밑에 지운이유 : newsLists를 page.js로 보내고있는데 굳이 header.js의 state에 저장할 필요가 있을까?? 없어서 지움.\n              // this.setState({\n              //     newsLists\n              // });\n\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.callNewsApi = function () {\n      console.log(\"지금 this.state.publisher는 \", _this.state.publisher);\n      return fetch(\"https://newsapi.org/v2/everything?q=\".concat(_this.state.searchKeyword, \"&sources=abc-news&from=\").concat(_this.state.periodStart, \"&to=\").concat(_this.state.peroidEnd, \"&sortBy=popularity&pageSize=30&page=1&apiKey=4460b53fe7a040b68124fc9ae2a3c84c\")).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        return json.articles;\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      searchKeyword: \"\",\n      periodStart: \"\",\n      periodEnd: \"\",\n      publisher: []\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getPublisher = _this.getPublisher.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      this.makeList();\n    }\n  }, {\n    key: \"getPublisher\",\n    value: function getPublisher(data) {\n      var _this2 = this;\n\n      console.log(\"header에서 받았음.\", data);\n      this.setState({\n        publisher: this.state.publisher.concat(data)\n      });\n      setTimeout(function () {\n        console.log(\"this.state.publisher: \", _this2.state.publisher[0]);\n      }, 0);\n    } //위와 마찬가지로, page에서 this.props.으로 데이터를 불러와서 api를 날린다면, 아래도 this.state가 필요없는것 아닐까?\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"period\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"searchKeyword\",\n        name: \"searchKeyword\",\n        placeholder: \"keyword\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"date\",\n        name: \"periodStart\",\n        className: \"periodStart\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"date\",\n        name: \"periodEnd\",\n        className: \"periodEnd\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"submitBtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }))), React.createElement(Lists, {\n        onGetPublisher: this.getPublisher,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Header;\n}(Component);\n\nexport default Header;","map":{"version":3,"sources":["/Users/junwoopark/coding/vanillacoding/vanilla-world-news/src/Header.js"],"names":["React","Component","Lists","Header","props","makeList","callNewsApi","newsLists","onTest","console","log","state","publisher","fetch","searchKeyword","periodStart","peroidEnd","then","response","json","articles","catch","err","periodEnd","handleChange","bind","handleSubmit","getPublisher","e","setState","target","name","value","preventDefault","data","concat","setTimeout"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport \"./Header.css\";\nimport Lists from \"./Lists\";\n\nclass Header extends Component {\n  //밑의 input태그의 this.handleChange를 this.props.handleChange같은 구조로.\n  //따로 state없이도 부모(page)에서 가져온 props만으로도 조작가능하니깐.\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchKeyword : \"\",\n      periodStart : \"\",\n      periodEnd : \"\",\n      publisher : []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getPublisher = this.getPublisher.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      [e.target.name] : e.target.value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.makeList();\n  }\n\n  makeList = async () => {\n    const newsLists = await this.callNewsApi();\n    this.props.onTest(newsLists);\n\n    //밑에 지운이유 : newsLists를 page.js로 보내고있는데 굳이 header.js의 state에 저장할 필요가 있을까?? 없어서 지움.\n    // this.setState({\n    //     newsLists\n    // });\n  }\n\n  getPublisher(data) {\n    console.log(\"header에서 받았음.\", data);\n    this.setState({\n      publisher : this.state.publisher.concat(data)\n    });\n    setTimeout(() => {\n      console.log(\"this.state.publisher: \", this.state.publisher[0]);\n    },0);\n  }\n\n  //위와 마찬가지로, page에서 this.props.으로 데이터를 불러와서 api를 날린다면, 아래도 this.state가 필요없는것 아닐까?\n  callNewsApi = () => {\n    console.log(\"지금 this.state.publisher는 \", this.state.publisher)\n    return fetch(`https://newsapi.org/v2/everything?q=${this.state.searchKeyword}&sources=abc-news&from=${this.state.periodStart}&to=${this.state.peroidEnd}&sortBy=popularity&pageSize=30&page=1&apiKey=4460b53fe7a040b68124fc9ae2a3c84c`)\n    .then(response => response.json())\n    .then(json => json.articles)\n    .catch(err => console.log(err));\n  }\n\n  render() {\n    return (\n      <div className = \"header\">\n        <form className = \"period\" onSubmit = {this.handleSubmit}>\n          <label>\n            <input type = \"text\" className = \"searchKeyword\" name = \"searchKeyword\" placeholder = \"keyword\" onChange = {this.handleChange}></input>\n            <input type = \"date\" name = \"periodStart\" className = \"periodStart\" onChange = {this.handleChange}/>\n            <input type = \"date\" name = \"periodEnd\" className = \"periodEnd\" onChange = {this.handleChange}/>\n            <input type = \"submit\" className = \"submitBtn\"/>\n          </label>\n        </form>\n        <Lists onGetPublisher = {this.getPublisher}/>\n      </div>\n    );\n  }\n}\n\nexport default Header\n"]},"metadata":{},"sourceType":"module"}