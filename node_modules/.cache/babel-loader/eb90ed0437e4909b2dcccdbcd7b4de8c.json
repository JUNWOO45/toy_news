{"ast":null,"code":"import _defineProperty from \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/junwoopark/coding/vanillacoding/vanilla-world-news/src/Header.js\";\nimport React, { Component } from \"react\";\nimport \"./Header.css\";\nimport Lists from \"./Lists\";\n\nvar Header =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Header, _Component);\n\n  //밑의 input태그의 this.handleChange를 this.props.handleChange같은 구조로.\n  //따로 state없이도 부모(page)에서 가져온 props만으로도 조작가능하니깐.\n  function Header(props) {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Header).call(this, props));\n    _this.searchNewArticlesQualificateConditions =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var newArticles;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.callApiToSearchArticles();\n\n            case 2:\n              newArticles = _context.sent;\n\n              _this.props.onChangePageState(newArticles);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.callApiToSearchArticles = function () {\n      var makeUrl = _this.state.publisherLists.join(\",\");\n\n      return fetch(\"https://newsapi.org/v2/everything?q=\".concat(_this.state.searchKeyword, \"&sources=\") + \"\".concat(makeUrl) + \"&from=\".concat(_this.state.periodStart, \"&to=\").concat(_this.state.peroidEnd, \"&sortBy=popularity&pageSize=30&page=1&apiKey=4460b53fe7a040b68124fc9ae2a3c84c\")).then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        return json.articles;\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    _this.state = {\n      searchKeyword: \"\",\n      periodStart: \"\",\n      periodEnd: \"\",\n      publisherLists: []\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getPublisher = _this.getPublisher.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit(e) {\n      e.preventDefault();\n      this.searchNewArticlesQualificateConditions();\n    }\n  }, {\n    key: \"getPublisher\",\n    value: function getPublisher(data) {\n      this.setState({\n        publisherLists: this.state.publisherLists.concat(data)\n      });\n    } //위와 마찬가지로, page에서 this.props.으로 데이터를 불러와서 api를 날린다면, 아래도 this.state가 필요없는것 아닐까?\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"period\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        className: \"searchKeyword\",\n        name: \"searchKeyword\",\n        placeholder: \"keyword\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"date\",\n        name: \"periodStart\",\n        className: \"periodStart\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"date\",\n        name: \"periodEnd\",\n        className: \"periodEnd\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        className: \"submitBtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"pubLists\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Lists, {\n        onGetPublisher: this.getPublisher,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Header;\n}(Component);\n\nexport default Header;","map":{"version":3,"sources":["/Users/junwoopark/coding/vanillacoding/vanilla-world-news/src/Header.js"],"names":["React","Component","Lists","Header","props","searchNewArticlesQualificateConditions","callApiToSearchArticles","newArticles","onChangePageState","makeUrl","state","publisherLists","join","fetch","searchKeyword","periodStart","peroidEnd","then","response","json","articles","catch","err","console","log","periodEnd","handleChange","bind","handleSubmit","getPublisher","e","setState","target","name","value","preventDefault","data","concat"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport \"./Header.css\";\nimport Lists from \"./Lists\";\n\nclass Header extends Component {\n    //밑의 input태그의 this.handleChange를 this.props.handleChange같은 구조로.\n    //따로 state없이도 부모(page)에서 가져온 props만으로도 조작가능하니깐.\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchKeyword : \"\",\n            periodStart : \"\",\n            periodEnd : \"\",\n            publisherLists : []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.getPublisher = this.getPublisher.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({\n        [e.target.name] : e.target.value\n        });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n        this.searchNewArticlesQualificateConditions();\n    }\n\n    searchNewArticlesQualificateConditions = async () => {\n        const newArticles = await this.callApiToSearchArticles();\n        this.props.onChangePageState(newArticles);\n    }\n\n    getPublisher(data) {\n        this.setState({\n        publisherLists : this.state.publisherLists.concat(data)\n        });\n    }\n\n    //위와 마찬가지로, page에서 this.props.으로 데이터를 불러와서 api를 날린다면, 아래도 this.state가 필요없는것 아닐까?\n    callApiToSearchArticles = () => {\n        const makeUrl = this.state.publisherLists.join(\",\");\n\n        return fetch(`https://newsapi.org/v2/everything?q=${this.state.searchKeyword}&sources=`+`${makeUrl}`+`&from=${this.state.periodStart}&to=${this.state.peroidEnd}&sortBy=popularity&pageSize=30&page=1&apiKey=4460b53fe7a040b68124fc9ae2a3c84c`)\n        .then(response => response.json())\n        .then(json => json.articles)\n        .catch(err => console.log(err));\n    }\n\n    render() {\n        return (\n        <div className = \"header\">\n            <form className = \"period\" onSubmit = {this.handleSubmit}>\n                <input type = \"text\" className = \"searchKeyword\" name = \"searchKeyword\" placeholder = \"keyword\" onChange = {this.handleChange}></input>\n                <input type = \"date\" name = \"periodStart\" className = \"periodStart\" onChange = {this.handleChange}/>\n                <input type = \"date\" name = \"periodEnd\" className = \"periodEnd\" onChange = {this.handleChange}/>\n                <input type = \"submit\" className = \"submitBtn\"/>\n            </form>\n\n            <div className = \"pubLists\">\n                <Lists onGetPublisher = {this.getPublisher}/>\n            </div>\n        </div>\n        );\n    }\n}\n\nexport default Header\n"]},"metadata":{},"sourceType":"module"}